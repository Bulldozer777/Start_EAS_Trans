<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lMIAAAAASUVORK5CYII=
</value>
  </data>
</root>